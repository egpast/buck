version: 2.1

orbs:
  win: circleci/windows@2.2.0

install_openjdk11: &install_openjdk11
  name: Install OpenJDK11
  command: |
    if [ "${PLATFORM}" == "linux" ]; then
      sudo apt-get update && sudo apt-get install openjdk-11-jdk
      sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
    elif [ "${PLATFORM}" == "macos" ]; then
      brew install openjdk@11
      export PATH="/usr/local/opt/openjdk@11/bin:$PATH"
    fi
    java -version

install_android_sdk: &install_android_sdk
  name: Install Android SDK
  command: |
    sdk_os="linux"
    if [ "${PLATFORM}" == "macos" ]; then
      sdk_os="mac"
    fi
    sdk_zip_filename="commandlinetools-${sdk_os}-8512546_latest.zip"
    mkdir -p "${ANDROID_SDK}/cmdline-tools"
    cd "${ANDROID_SDK}/cmdline-tools"
    curl -O "https://dl.google.com/android/repository/${sdk_zip_filename}"
    unzip "${sdk_zip_filename}"
    mv cmdline-tools latest
    export PATH="${ANDROID_SDK}/cmdline-tools/latest/bin:${PATH}"
    echo 'y' |sdkmanager --install tools
    echo 'y' |sdkmanager --install platform-tools
    echo 'y' |sdkmanager --install "build-tools;28.0.0"
    echo 'y' |sdkmanager --install "platforms;android-23"

    # Install 32 bit libraries
    # https://stackoverflow.com/questions/36911709/cannot-run-program-aapt
    # Needed to run Android build-tools
    if [ "${PLATFORM}" == "linux" ]; then
      sudo apt-get install gcc-multilib lib32z1 lib32stdc++6
    fi

install_python: &install_python
  name: Install Python 3.9.4
  command: |
    if [ "${PLATFORM}" == "macos" ]; then
      brew install pyenv
    fi
    pyenv install -s 3.9.4
    pyenv global 3.9.4 system
    export PATH="$(pyenv root)/shims:${PATH}"
    python --version

run_ant_build: &run_ant_build
  name: Run Ant Build
  command: |
    if [ "${PLATFORM}" == "macos" ]; then
      # The latest ant depends on JDK13, install 1.9 instead.
      brew install ant@1.9
      export PATH="/usr/local/opt/ant@1.9/bin:${PATH}"
    fi
    cd "${BUCKROOT}"
    set -ex
    export ANT_OPTS='-Xmx1000m'
    ant

run_buck_build: &run_buck_build
  name: Run Buck Build
  command: |
    cd "${BUCKROOT}"
    echo '-Xmx1024m' > .buckjavaargs.local
    export PATH="${ANDROID_SDK}/tools/bin:${PATH}"
    export PATH="$(pyenv root)/shims:${PATH}"
    set -ex
    ./bin/buck build buck --out "./${BUCK_PEX_LOCATION}" || { cat "buck-out/log/buck-0.log"; exit 1; }

linux_environment: &linux_environment
  # Use string constant for values, no environment variables
  PLATFORM: "linux"
  BUCKROOT: "/home/circleci/buck"
  ANDROID_SDK: "/home/circleci/android-sdk"
  TERM: "dumb"
  BUCK_NUM_THREADS: 3
  BUCK_PEX_LOCATION: "new_buck.pex"

jobs:
  publish_docs:
    environment:
      <<: *linux_environment
    working_directory: "/home/circleci/buck"
    machine:
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - run:
          <<: *install_openjdk11
      - run:
          # android_sdk needed to build java docs.
          <<: *install_android_sdk
      - run:
          <<: *install_python
      - run:
          <<: *run_ant_build
      - restore_cache:
          key: v-{{ .Environment.CACHE_VERSION }}-buck-build-{{ .Branch }}
      - run:
          <<: *run_buck_build
      - run:
          name: Publish docs
          command: |
            export ANDROID_HOME="${ANDROID_SDK}"
            cd docs
            ./publish.sh --buck-location "${BUCKROOT}/${BUCK_PEX_LOCATION}" --start-soyweb

workflows:
  version: 2.1
  publish_docs_cron_job:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only: dev
    jobs:
      - publish_docs
